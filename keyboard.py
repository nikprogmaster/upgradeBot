import telebot.types as keyboards

# –ö–Ω–æ–ø–∫–∏
timetable = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
help = "–ü–æ–º–æ—â—å"
ask_tricky_question = "–ó–∞–¥–∞—Ç—å –∫–∞–≤–µ—Ä–∑–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–ø–∏–∫–µ—Ä–∞"
write_prayer_need = "–ù–∞–ø–∏—Å–∞—Ç—å –º–æ–ª–∏—Ç–≤–µ–Ω–Ω—É—é –Ω—É–∂–¥—É"
acquaintance = "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ"
social_media = "–°–æ—Ü—Å–µ—Ç–∏"
chat = "–ß–∞—Ç"
main = "–ì–ª–∞–≤–Ω–∞—è"
reply = "–û—Ç–≤–µ—Ç–∏—Ç—å"

# –ö–Ω–æ–ø–∫–∏ maintainer
start_game = "–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ"
parts_number = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
finish_game = "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É"
send_everyone = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º"
show_all_questions = "–í—Å–µ –∫–∞–≤–µ—Ä–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
show_all_needs = "–í—Å–µ –Ω—É–∂–¥—ã"

# –û—Ç–≤–µ—Ç—ã –±–æ—Ç–∞
thanks_for_question = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!"
thanks_for_tricky_question = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å!"
we_will_pray = "–ë—É–¥–µ–º –º–æ–ª–∏—Ç—å—Å—è üôè"
write_your_question = "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"
write_your_need = "–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –º–æ–ª–∏—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–æ—Å—å–±—É"
answer = "–û—Ç–≤–µ—Ç:"
game_started = "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!"
game_finished = "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞"
choose_required_chapter = "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª"
replied = "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
type_message = "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"


def getStartKeyboard(is_moderator, is_maintainer):
    keyboard = keyboards.ReplyKeyboardMarkup(True, False)
    keyboard.row(timetable, acquaintance, chat)
    keyboard.row(write_prayer_need, ask_tricky_question, social_media)
    if not is_moderator and not is_maintainer:
        keyboard.row(help)
    if is_maintainer:
        keyboard.row(send_everyone, show_all_needs, show_all_questions)
    return keyboard


def getMainKeyboard():
    keyboard = keyboards.ReplyKeyboardMarkup(True, False)
    keyboard.row(main)
    return keyboard


def getGameKeyboard():
    keyboard = keyboards.ReplyKeyboardMarkup(True, False)
    keyboard.row(start_game, parts_number)
    return keyboard


def getFinishGameKeyboard():
    keyboard = keyboards.ReplyKeyboardMarkup(True, False)
    keyboard.row(finish_game)
    return keyboard


def getReplyKeyBoard(opponent_id):
    keyboard = keyboards.InlineKeyboardMarkup()
    keyboard.add(keyboards.InlineKeyboardButton(reply, callback_data=str(opponent_id)))
    return keyboard


def getForceReplyKeyboard():
    keyboard = keyboards.ForceReply(False)
    return keyboard
